name: PHP Composer

on:
  push:
    branches: [ main ]
  pull_request:
    types: 
      - opened
      - reopened
      - edited
      - synchronize

permissions:
  contents: read

env:
  COVERAGE: '1'
  php_extensions: 'json, http'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

  test:
    strategy:
      fail-fast: false
      matrix:
        operating_system: ['ubuntu-latest']
        php_versions: ['7.4', '8.0', '8.1']
        experimental: [false]
        include:
          - operating_system: ubuntu-latest
            php_versions: '8.1'
            experimental: true
    runs-on: '${{ matrix.operating_system }}'
    name: 'Test / PHP ${{ matrix.php_versions }}'
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: 'Setup PHP'
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php_versions }}
          extensions: ${{ env.php_extensions }}
          ini-values: 'pcov.directory=src, date.timezone=UTC, upload_max_filesize=20M, post_max_size=20M, memory_limit=512M, short_open_tag=Off'
          coverage: pcov
          tools: 'phpunit'
      - name: 'Install composer and dependencies'
        uses: php-actions/composer@v6
      - name: PHPUnit Tests
        uses: php-actions/phpunit@v3
        env:
          XDEBUG_MODE: coverage
        with:
          bootstrap: vendor/autoload.php
          configuration: phpunit.xml
          php_extensions: xdebug
          args: tests --coverage-clover ./coverage.xml
      - name: 'Upload coverage results to Coveralls'
        if: ${{ !matrix.experimental }}
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_PARALLEL: true
          COVERALLS_FLAG_NAME: php-${{ matrix.php_versions }}
        run: |
          ./vendor/bin/php-coveralls \
            --coverage_clover=build/logs/clover.xml \
            -v
  coverage:
    needs: test
    runs-on: ubuntu-latest
    name: "Code coverage"
    steps:
      - name: 'Coveralls Finished'
        uses: coverallsapp/github-action@v1.1.2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true

